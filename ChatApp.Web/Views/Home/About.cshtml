@{ ViewData["Title"] = "About";}

<main id="about">

    <h1>@ViewData["title"]</h1>

    <h4>Requirements:</h4>
    <h6>Create a web based chat that supports:</h6>
    <ol>
        <li>Basic user register and login(as minimum as possible; advanced scenario is optional)</li>
        <li>User profile(optional)</li>
        <li>Individual chatting</li>
        <li>Chat in one group for all users (optionally individual chat groups)</li>
        <li>History of the messages + Search(optional)</li>
        <li>Responsive design(optional)</li>
    </ol>

    <h6>Tech stack:</h6>
    <ol>
        <li>Front-end: ReactJS + all other necessary JS libs</li>
        <li>Back-end: ASP.NET Core Web API  for REST + EF Core(or ADO.NET optional); ASP.NET Core SignalR for real-time web functionality</li>
        <li>DB: MSSQL for SQL / MongoDB for NoSQL(optional)</li>
        <li>Create GitHub repository for progress tracking</li>
    </ol>
    <hr />
    <h4>App Features</h4>
    <h6>Technologies Used:</h6>
    <ul class="list-style-none" style="display: flex;">
        <li style="margin: 0 10px;"><a href="https://docs.microsoft.com/en-us/aspnet/core/?view=aspnetcore-2.0">ASP.NET Core 2</a></li>
        <li style="margin: 0 10px;"><a href="https://go.microsoft.com/fwlink/?LinkID=398939">Bootstrap 4</a></li>
        <li style="margin: 0 10px;"><a href="https://docs.microsoft.com/en-us/aspnet/core/signalr/introduction?view=aspnetcore-2.2&viewFallbackFrom=aspnetcore-2.0">SignalR</a></li>
        <li style="margin: 0 10px;"><a href="https://reactjs.org/">React</a></li>
    </ul>

    <ol>
        <li>User registration and login with external services (Facebook, Google, Microsoft) is supported.</li>
        <li>Individual chatting.</li>
        <li>Chat in chat rooms. One chat room is 'Public' and is auto-generated in the DB on initialization of the app.</li>
        <li>The public chat room is accessible to all users. They can join/leave any chat room as they wish.</li>
        <li>Since the app stores the creator (owner) of each room, in a future version access to the rooms may be made only with authorization from the room owner.</li>
        <li>All messages are stored in the database (MSSQL).</li>
        <li>Sorting and filtering is done on the clients (with Javascript/React).</li>
        <li>Fully responsive design using Bootstrap 4 ans some SASS.</li>
        <li>React is used only on the chat page.</li>
        <li>The source code is on <a href="#">Github</a>.</li>
    </ol>
    <hr />
    <h2>&nbsp;</h2>
</main>
